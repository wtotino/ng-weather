{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app.routing.ts","./src/app/cache.service.ts","./src/app/current-conditions/current-conditions.component.ts","./src/app/data/config.ts","./src/app/forecasts-list/forecasts-list.component.ts","./src/app/location.service.ts","./src/app/main-page/main-page.component.ts","./src/app/tabs/tabs.component.ts","./src/app/weather.service.ts","./src/app/zipcode-entry/zipcode-entry.component.ts","./src/environments/environment.ts","./src/main.ts","./src/app/app.component.css","./src/app/current-conditions/current-conditions.component.css","./src/app/forecasts-list/forecasts-list.component.css","./src/app/tabs/tabs.component.css"],"sourcesContent":["import { Component } from '@angular/core';\nimport {SwPush, SwUpdate} from '@angular/service-worker';\nimport {interval} from 'rxjs';\nimport {HttpClient} from '@angular/common/http';\n\n@Component({\n\tselector: 'app-root',\n\ttemplateUrl: './app.component.html',\n\tstyleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n\tconstructor() {\n\n\t}\n}\n","import { InjectionToken, NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { AppConfig, NG_WEATHER_CONFIG } from 'app/data/config';\nimport { TabsComponent } from 'app/tabs/tabs.component';\nimport { environment } from '../environments/environment';\nimport { AppComponent } from './app.component';\nimport { routing } from './app.routing';\nimport { CurrentConditionsComponent } from './current-conditions/current-conditions.component';\nimport { ForecastsListComponent } from './forecasts-list/forecasts-list.component';\nimport { LocationService } from './location.service';\nimport { MainPageComponent } from './main-page/main-page.component';\nimport { WeatherService } from './weather.service';\nimport { ZipcodeEntryComponent } from './zipcode-entry/zipcode-entry.component';\n\nexport const APP_CONFIG = new InjectionToken<AppConfig>('app.config');\n@NgModule({\n\tdeclarations: [AppComponent, ZipcodeEntryComponent, ForecastsListComponent, CurrentConditionsComponent, MainPageComponent, TabsComponent],\n\timports: [BrowserModule, FormsModule, HttpClientModule, RouterModule, routing, ServiceWorkerModule.register('/ngsw-worker.js', { enabled: environment.production })],\n\tproviders: [\n\t\tLocationService,\n\t\tWeatherService,\n\t\t{ provide: APP_CONFIG, useValue: NG_WEATHER_CONFIG },\n\t],\n\tbootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { ModuleWithProviders } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ForecastsListComponent } from \"./forecasts-list/forecasts-list.component\";\nimport { MainPageComponent } from \"./main-page/main-page.component\";\n\nconst appRoutes: Routes = [\n\t{\n\t\tpath: '', component: MainPageComponent\n\t},\n\t{\n\t\tpath: 'forecast/:zipcode', component: ForecastsListComponent\n\t}\n];\nexport const routing: ModuleWithProviders<any> = RouterModule.forRoot(appRoutes, {});\n","import { Inject, Injectable } from \"@angular/core\";\nimport { APP_CONFIG } from \"app/app.module\";\nimport { AppConfig } from \"app/data/config\";\nimport { Observable, of, tap } from \"rxjs\";\n\n/**\n * Service that keeps application data stored inside the browser's localStorage\n * and refreshes it if enough time passed (based on AppConfig.cacheRefresh value)\n * @see AppConfig\n * \n * Personal Note: At first I thought about creating an interceptor but that would've been easy to \"copy paste\" from the internet so I decided on something more \"personal\"\n * There's still some advantages in using this approach, for example one can decide in each service which calls gets cached and which aren't.\n * I'm not 100% sure but I think it would also be more complicated to rebuild an HttpResponse with all the headers when saved on the localStorage\n */\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class CacheService {\n\tprivate static readonly APP_CACHE: string = \"appCache\";\n\tprivate cache: { [key: string]: { data: any; lastUpdate: number } } = {};\n\n\t/**\n\t * How many milliseconds a value needs to be kept inside the cache (default value 2 hours)\n\t */\n\tprivate cacheRefreshTime = 2 * 60 * 60 * 1000;\n\n\t/**\n\t * sets the cacheRefreshTime value and gets items from localStorage\n\t */\n\tconstructor(@Inject(APP_CONFIG) config: AppConfig) {\n\t\tthis.cacheRefreshTime = config.cacheRefreshTime;\n\n\t\tconst value = localStorage.getItem(CacheService.APP_CACHE);\n\t\tif (value) {\n\t\t\tthis.cache = JSON.parse(value);\n\t\t}\n\t}\n\n\t/**\n\t * checks if a value associated with the given url is inside the cache, otherwise it returns\n\t * the passed observable and saves the value in cache\n\t */\n\tpublic get<T>(url: string, observable: Observable<T>): Observable<T> {\n\t\t// When the cache is considered expired\n\t\tconst cacheExpire = new Date().getTime() - this.cacheRefreshTime;\n\n\t\t// If we find the value in cache\n\t\tif(this.cache[url] && this.cache[url].lastUpdate > cacheExpire) {\n\t\t\treturn of(this.cache[url].data);\n\t\t}\n\n\t\t// If we don't find the value or is expired we return the observable but save data in cache\n\t\treturn observable.pipe(tap(data => {\n\t\t\tthis.cache[url] = { data, lastUpdate: new Date().getTime() };\n\n\t\t\tlocalStorage.setItem(CacheService.APP_CACHE, JSON.stringify(this.cache));\n\t\t}));\n\t}\n}\n","import { AfterViewInit, ChangeDetectorRef, Component, Signal, TemplateRef, ViewChild, computed, inject } from '@angular/core';\nimport { Router } from \"@angular/router\";\nimport { ConditionsAndZip } from 'app/conditions-and-zip.type';\nimport { TabModel, TabsComponent } from 'app/tabs/tabs.component';\nimport { LocationService } from \"../location.service\";\nimport { WeatherService } from \"../weather.service\";\n\n@Component({\n\tselector: 'app-current-conditions',\n\ttemplateUrl: './current-conditions.component.html',\n\tstyleUrls: ['./current-conditions.component.css']\n})\nexport class CurrentConditionsComponent implements AfterViewInit {\n\n\t// By using a prefix we make sure even in an object we keep insertion order, since zipcodes are numbers it would order them otherwise\n\tprivate static readonly PREFIX = \"z_\";\n\n\t@ViewChild(\"conditionTemplate\") public conditionTemplate: TemplateRef<any>;\n\t@ViewChild(\"tabsComponent\") public tabsComponent: TabsComponent;\n\n\tpublic weatherService = inject(WeatherService);\n\tprivate router = inject(Router);\n\tprotected locationService = inject(LocationService);\n\n\t// We make a computed signal that turns the map into an array\n\tprivate currentConditionsByZip: Signal<ConditionsAndZip[]> = this.weatherService.getCurrentConditions();\n\tprivate tabsMap: { [key: string ]: TabModel } = {};\n\tpublic tabs: Signal<TabModel[]>;\n\n\tconstructor(private cdref: ChangeDetectorRef) {\t}\n\n\tpublic showForecast(zipcode: string){\n\t\tthis.router.navigate(['/forecast', zipcode]);\n\t}\n\n\tpublic ngAfterViewInit() {\n\t\tthis.tabs = computed(() => {\n\t\t\tconst conditions = this.currentConditionsByZip();\n\t\t\tconsole.log(conditions);\n\n\t\t\t// First we check if we have to remove some values\n\t\t\tObject.keys(this.tabsMap).forEach(t => {\n\t\t\t\tif(!conditions.some(c => CurrentConditionsComponent.PREFIX + c.zip === t)) {\n\t\t\t\t\tdelete this.tabsMap[t];\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Then we add the values we don't already have\n\t\t\tconditions.filter(c => !this.tabsMap[CurrentConditionsComponent.PREFIX + c.zip]).forEach(c => {\n\t\t\t\tthis.tabsMap[CurrentConditionsComponent.PREFIX + c.zip] = {\n\t\t\t\t\tcontent: this.conditionTemplate,\n\t\t\t\t\tdata: c,\n\t\t\t\t\ttitle: c.data.name + \" (\" + c.zip + \")\",\n\t\t\t\t};\n\t\t\t});\n\n\t\t\treturn Object.values(this.tabsMap);\n\t\t});\n\n\t\t// Without this we will have ExpressionChangedAfterItHasBeenCheckedError error while developing\n\t\tthis.cdref.detectChanges();\n\t}\n}\n","export interface AppConfig {\n\tcacheRefreshTime: number;\n}\n\n/**\n * Application configuration variables\n * Personal Note: I could've used the environment files, adding a environment.spec.ts file for tests, but since Angular 15 won't generate environment \n * files when creating a project with ng new I decided to go with the providers approach\n */\nexport const NG_WEATHER_CONFIG: AppConfig = {\n\t/**\n\t *  How many milliseconds a value needs to be kept inside the cache\n\t */\n\tcacheRefreshTime: 2 * 60 * 60 * 1000\n};\n","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { WeatherService } from '../weather.service';\nimport { Forecast } from './forecast.type';\n\n@Component({\n\tselector: 'app-forecasts-list',\n\ttemplateUrl: './forecasts-list.component.html',\n\tstyleUrls: ['./forecasts-list.component.css']\n})\nexport class ForecastsListComponent {\n\n\tpublic zipcode: string;\n\tpublic forecast: Forecast;\n\n\tconstructor(protected weatherService: WeatherService, route: ActivatedRoute) {\n\t\troute.params.subscribe(params => {\n\t\t\tthis.zipcode = params['zipcode'];\n\t\t\tweatherService.getForecast(this.zipcode)\n\t\t\t\t.subscribe(data => this.forecast = data);\n\t\t});\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\nexport const LOCATIONS: string = \"locations\";\n\n@Injectable()\nexport class LocationService {\n\n\tprivate locationsArr: string[] = [];\n\n\t/**\n\t * Subject used to notify when locations are changed\n\t * We use a BehaviorSubject so whoever subscribes will get the current state of the locations\n\t */\n\tprivate locationsSub: BehaviorSubject<string[]> = new BehaviorSubject([]);\n\n\t/**\n\t * get locations updates as Observable\n\t */\n\tpublic get locations() {\n\t\treturn this.locationsSub.asObservable();\n\t}\n\n\tconstructor() {\n\t\tconst locString = localStorage.getItem(LOCATIONS);\n\t\tif (locString) {\n\t\t\tthis.locationsArr = JSON.parse(locString);\n\n\t\t\t// We notify the whole array \n\t\t\tthis.locationsSub.next(this.locationsArr);\n\t\t}\n\t}\n\n\t/**\n\t * Updates locations and localStorage\n\t */\n\tpublic addLocation(zipcode: string) {\n\t\t// Don't add empty zipcodes and already existing zipcodes\n\t\tif(zipcode?.length > 0 && !this.locationsArr.includes(zipcode)) {\n\t\t\tthis.locationsArr.push(zipcode);\n\t\t\tlocalStorage.setItem(LOCATIONS, JSON.stringify(this.locationsArr));\n\t\t\tthis.locationsSub.next(this.locationsArr);\n\t\t}\n\t}\n\n\tpublic removeLocation(zipcode: string) {\n\t\tconst index = this.locationsArr.indexOf(zipcode);\n\t\tif (index !== -1) {\n\t\t\tthis.locationsArr.splice(index, 1);\n\t\t\tlocalStorage.setItem(LOCATIONS, JSON.stringify(this.locationsArr));\n\t\t\tthis.locationsSub.next(this.locationsArr);\n\t\t}\n\t}\n}\n","import { Component } from '@angular/core';\n\n@Component({\n\tselector: 'app-main-page',\n\ttemplateUrl: './main-page.component.html'\n})\nexport class MainPageComponent {\n\n}\n","import { Component, EventEmitter, Input, Output, TemplateRef } from '@angular/core';\n\nexport interface TabModel {\n\tcontent: TemplateRef<any>;\n\tdata: any;\n\ttitle: string;\n}\n\n/**\n * Component that holds an array of tabs and manages switching from one tab to another, showing the currently active tab in a container\n * \n */\n@Component({\n\tselector: 'app-tabs',\n\ttemplateUrl: './tabs.component.html',\n\tstyleUrls: ['./tabs.component.css']\n})\nexport class TabsComponent {\n\tpublic tabsValue: TabModel[] = [];\n\n\t@Input() public set tabs(value: TabModel[]) {\n\t\t// We reset the array and the activeTab then use the method addTabs that includes all the logic for adding one or more tabs\n\t\tthis.tabsValue.length = 0;\n\t\tconst activeTab = this.activeTab;\n\t\tthis.activeTab = null;\n\t\tthis.addTabs(...value);\n\n\t\t//After we add all the tabs we check if the previously active tab is still in the array and in that case select it\n\t\tconst found = this.tabsValue.find(t => t === activeTab);\n\n\t\t//the addTabs will change to the first value in the array but if we have found a previously selected tab we put it back\n\t\tif(found) {\n\t\t\tthis.activeTab = found;\n\t\t}\n\t}\n\n\t@Output() public tabChanged: EventEmitter<TabModel> = new EventEmitter();\n\n\tpublic activeTab: TabModel;\n\n\t@Input() public tabContainer: TemplateRef<any>;\n\t@Input() public tabLink: TemplateRef<any>;\n\n\t/**\n\t * Changes the currently active tab to the one passed\n\t */\n\tpublic changeTab(tab: TabModel) {\n\t\t// Just to make sure we are changing to one of the tabs handled by the component\n\t\tif(this.tabsValue.includes(tab)) {\n\t\t\tthis.setTab(tab);\n\t\t}\n\t}\n\n\tprivate setTab(tab: TabModel) {\n\t\tthis.activeTab = tab;\n\t\tthis.tabChanged.emit(tab);\n\t}\n\n\t/**\n\t * Adds one or more tabs\n\t */\n\tpublic addTabs(...tabs: TabModel[]) {\n\t\tconst emptyTabs = this.tabsValue.length === 0;\n\t\tthis.tabsValue.push(...tabs);\n\n\t\t// If we previously had no tabs we switch to the first one in the array\n\t\tif(emptyTabs && this.tabsValue.length > 0) {\n\t\t\tthis.changeTab(this.tabsValue[0]);\n\t\t}\n\t}\n\n\t/**\n\t * Removes a tab from the array\n\t */\n\tpublic removeTab(tab: TabModel) {\n\t\tconst index = this.tabsValue.indexOf(tab);\n\t\tif (index !== -1) {\n\t\t\tthis.tabsValue.splice(index, 1);\n\t\t}\n\n\t\t// if we are removing the currently active tab we go back to the first one\n\t\tif (this.activeTab === tab && this.tabsValue?.length > 0) {\n\t\t\tthis.changeTab(this.tabsValue[0]);\n\t\t} else if(this.tabsValue?.length === 0) {\n\t\t\t// If there's no more tabs in the array we clear the activeTab\n\t\t\tthis.setTab(null);\n\t\t}\n\t}\n}\n","import { Injectable, Signal, computed, signal } from '@angular/core';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { Observable } from 'rxjs';\n\nimport { HttpClient } from '@angular/common/http';\nimport { CacheService } from 'app/cache.service';\nimport { LocationService } from 'app/location.service';\nimport { environment } from 'environments/environment';\nimport { ConditionsAndZip } from './conditions-and-zip.type';\nimport { CurrentConditions } from './current-conditions/current-conditions.type';\nimport { Forecast } from './forecasts-list/forecast.type';\n\n/**\n * example codes\n * 95742 Rancho Cordova\n * 10001 New York\n */\nexport interface ConditionsMap {\n\t[key: string]: ConditionsAndZip;\n}\n\n@Injectable()\nexport class WeatherService {\n\n\t// By using a prefix we make sure even in an object we keep insertion order, since zipcodes are numbers it would order them otherwise\n\tprivate static readonly PREFIX = \"z_\";\n\tprivate static URL =  ( environment.production ? 'https' : 'http' ) + '://api.openweathermap.org/data/2.5';\n\tprivate static APPID = '5a4b2d457ecbef9eb2a71e480b947604';\n\tprivate static ICON_URL = 'https://raw.githubusercontent.com/udacity/Sunshine-Version-2/sunshine_master/app/src/main/res/drawable-hdpi/';\n\tprivate currentConditionsMap = signal<ConditionsMap>({});\n\n\t/**\n\t * computed signal that returns data as an array like in the previous implementation, by doing so the new way of keeping the data is transparent for whoever uses the service\n\t */\n\tprivate currentConditions: Signal<ConditionsAndZip[]> = computed(() => Object.values(this.currentConditionsMap()));\n\n\tconstructor(private http: HttpClient, private locationService: LocationService, private cacheService: CacheService) {\n\t\t// We use takeUntilDestroyed so that if this service is provided locally in a component it will be destoryed together with the component\n\t\tthis.locationService.locations.pipe(takeUntilDestroyed()).subscribe((zipcodes: string[]) => {\n\t\t\t/* Personal note: I implemented the update this way so it wouldn't make unnecessary calls whenever locationservice passes the whole array back. \n\t\t\tI could've just cleared the object and add all the new values back but that would've caused unnecesary calls to the openweather API. Since in the \n\t\t\tStep 3 we implemented a cache system this wouldn't be the case anymore but I decided to leave things as they were when I implemented this in Step 1\n\t\t\t */\n\t\t\tthis.currentConditionsMap.mutate(conditions => {\n\t\t\t\t// We iterate through the existing conditions to remove the ones that have been removed from the locationService\n\t\t\t\tconst keys = Object.getOwnPropertyNames(conditions);\n\t\t\t\tkeys.forEach(c => {\n\t\t\t\t\tif(!zipcodes.includes(c)) {\n\t\t\t\t\t\t/* We don't call removeCurrentConditions so we don't have multiple mutations\n\t\t\t\t\t\t   at the moment nobody calls removeCurrentConditions because it goes through locationService\n\t\t\t\t\t\t   Maybe add and remove CurrentConditions should be private?\n\t\t\t\t\t\t */\n\t\t\t\t\t\tdelete conditions[c];\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t});\n\n\t\t\t// Get current conditions so we can use them to filter the zipcodes to avoid making needless calls to already fetched conditions\n\t\t\tconst current = this.currentConditionsMap();\n\t\t\t// Then we add the new conditions\n\t\t\tzipcodes.filter(z => !current[WeatherService.PREFIX + z]).forEach(z => this.addCurrentConditions(z));\n\t\t});\n\t}\n\n\tpublic addCurrentConditions(zipcode: string): void {\n\t\t// Here we make a request to get the current conditions data from the API. Note the use of backticks and an expression to insert the zipcode\n\t\tconst url = `${WeatherService.URL}/weather?zip=${zipcode},us&units=imperial&APPID=${WeatherService.APPID}`;\n\t\tthis.cacheService.get(url, this.http.get<CurrentConditions>(url)).subscribe(data => this.currentConditionsMap.mutate(conditions => {\n\t\t\tconditions[WeatherService.PREFIX + zipcode] = {zip: zipcode, data};\n\t\t}));\n\t}\n\n\t/**\n\t * Personal note: in the previous implementation there was a bug: if the same zipcode was inserted more than once, removing one would've removed them all\n\t * The new implementation doesn't allow the same zipcode multiple times so the bug doesn't happen (please forgive me if the same zipcode multiple times was actually a feature)\n\t */\n\tpublic removeCurrentConditions(zipcode: string) {\n\t\tthis.currentConditionsMap.mutate(conditions => {\n\t\t\tdelete conditions[WeatherService.PREFIX + zipcode];\n\t\t});\n\t}\n\n\tpublic getCurrentConditions(): Signal<ConditionsAndZip[]> {\n\t\t// Computed signals are already readonly\n\t\treturn this.currentConditions;\n\t}\n\n\tpublic getForecast(zipcode: string): Observable<Forecast> {\n\t\t// Here we make a request to get the forecast data from the API. Note the use of backticks and an expression to insert the zipcode\n\t\tconst url = `${WeatherService.URL}/forecast/daily?zip=${zipcode},us&units=imperial&cnt=5&APPID=${WeatherService.APPID}`;\n\t\treturn this.cacheService.get(url, this.http.get<Forecast>(url));\n\t}\n\n\tpublic getWeatherIcon(id: number): string {\n\t\tif (id >= 200 && id <= 232) {\n\t\t\treturn WeatherService.ICON_URL + \"art_storm.png\";\n\t\t} else if (id >= 501 && id <= 511) {\n\t\t\treturn WeatherService.ICON_URL + \"art_rain.png\";\n\t\t} else if (id === 500 || (id >= 520 && id <= 531)) {\n\t\t\treturn WeatherService.ICON_URL + \"art_light_rain.png\";\n\t\t} else if (id >= 600 && id <= 622) {\n\t\t\treturn WeatherService.ICON_URL + \"art_snow.png\";\n\t\t} else if (id >= 801 && id <= 804) {\n\t\t\treturn WeatherService.ICON_URL + \"art_clouds.png\";\n\t\t} else if (id === 741 || id === 761) {\n\t\t\treturn WeatherService.ICON_URL + \"art_fog.png\";\n\t\t} else {\n\t\t\treturn WeatherService.ICON_URL + \"art_clear.png\";\n\t\t}\n\t}\n\n}\n","import { Component } from '@angular/core';\nimport { LocationService } from \"../location.service\";\n\n@Component({\n\tselector: 'app-zipcode-entry',\n\ttemplateUrl: './zipcode-entry.component.html'\n})\nexport class ZipcodeEntryComponent {\n\n\tconstructor(private service: LocationService) { }\n\n\tpublic addLocation(zipcode: string){\n\t\tthis.service.addLocation(zipcode);\n\t}\n\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n\tproduction: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n\tenableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n","// Imports\nvar ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/sourceMaps.js\");\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, ``, \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nvar ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\");\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.close {\n  cursor: pointer;\n  padding: 0.2em;\n}\n\n.flex {\n  display: flex;\n  justify-content: space-between;\n}\n\n.conditions-container {\n\tpadding: 0.5em;\n\tborder: 1px solid #000000;\n}\n\n.tab {\n\tborder: 1px solid #000000;\n\tcolor: #FFFFFF;\n\tborder-bottom: 0;\n\tborder-radius: 0;\n\tbackground-color: #617AA0;\n\n\tborder-start-start-radius: 4px;\n\tborder-start-end-radius: 4px;\n\n\tdisplay: flex;\n\talign-items: center;\n}\n\n.tab button {\n\tborder: 0;\n\tbackground-color: transparent;\n\tpadding: 0.5em;\n}\n\n.tab:hover, .tab.selected {\n\tbackground-color: #485b78;\n}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/app/current-conditions/current-conditions.component.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,eAAe;EACf,cAAc;AAChB;;AAEA;EACE,aAAa;EACb,8BAA8B;AAChC;;AAEA;CACC,cAAc;CACd,yBAAyB;AAC1B;;AAEA;CACC,yBAAyB;CACzB,cAAc;CACd,gBAAgB;CAChB,gBAAgB;CAChB,yBAAyB;;CAEzB,8BAA8B;CAC9B,4BAA4B;;CAE5B,aAAa;CACb,mBAAmB;AACpB;;AAEA;CACC,SAAS;CACT,6BAA6B;CAC7B,cAAc;AACf;;AAEA;CACC,yBAAyB;AAC1B\",\"sourcesContent\":[\".close {\\n  cursor: pointer;\\n  padding: 0.2em;\\n}\\n\\n.flex {\\n  display: flex;\\n  justify-content: space-between;\\n}\\n\\n.conditions-container {\\n\\tpadding: 0.5em;\\n\\tborder: 1px solid #000000;\\n}\\n\\n.tab {\\n\\tborder: 1px solid #000000;\\n\\tcolor: #FFFFFF;\\n\\tborder-bottom: 0;\\n\\tborder-radius: 0;\\n\\tbackground-color: #617AA0;\\n\\n\\tborder-start-start-radius: 4px;\\n\\tborder-start-end-radius: 4px;\\n\\n\\tdisplay: flex;\\n\\talign-items: center;\\n}\\n\\n.tab button {\\n\\tborder: 0;\\n\\tbackground-color: transparent;\\n\\tpadding: 0.5em;\\n}\\n\\n.tab:hover, .tab.selected {\\n\\tbackground-color: #485b78;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nvar ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\");\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.icon {\n  width: 45px;\n  height: 45px;\n  position: absolute;\n  right: 20px;\n  top: -2px;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/app/forecasts-list/forecasts-list.component.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,WAAW;EACX,YAAY;EACZ,kBAAkB;EAClB,WAAW;EACX,SAAS;AACX\",\"sourcesContent\":[\".icon {\\n  width: 45px;\\n  height: 45px;\\n  position: absolute;\\n  right: 20px;\\n  top: -2px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nvar ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\");\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `ul.tabs {\n\tlist-style-type: none;\n\tmargin: 0;\n\tpadding: 0;\n\toverflow-x: auto;\n\tdisplay: flex;\n\tflex-wrap: nowrap;\n\talign-items: baseline;\n}\n\nli.tab {\n\theight: 100%;\n\tmargin-right: 0.5em;\n\tmin-width: 120px;\n}\n\nli.tab:first-child {\n\tmargin-left: 0.5em;\n}\n\n.tab button {\n\tborder: 1px solid #000000;\n\tborder-bottom: 0;\n\tborder-radius: 0;\n\tbackground-color: transparent;\n\tpadding: 0.5em;\n\n\tborder-start-start-radius: 4px;\n\tborder-start-end-radius: 4px;\n}\n\n.tab button:hover {\n\tbackground-color: #F5F5F5;\n}\n\n.tab .selected {\n\tbackground-color: #E3E3E3;\n}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/app/tabs/tabs.component.css\"],\"names\":[],\"mappings\":\"AAAA;CACC,qBAAqB;CACrB,SAAS;CACT,UAAU;CACV,gBAAgB;CAChB,aAAa;CACb,iBAAiB;CACjB,qBAAqB;AACtB;;AAEA;CACC,YAAY;CACZ,mBAAmB;CACnB,gBAAgB;AACjB;;AAEA;CACC,kBAAkB;AACnB;;AAEA;CACC,yBAAyB;CACzB,gBAAgB;CAChB,gBAAgB;CAChB,6BAA6B;CAC7B,cAAc;;CAEd,8BAA8B;CAC9B,4BAA4B;AAC7B;;AAEA;CACC,yBAAyB;AAC1B;;AAEA;CACC,yBAAyB;AAC1B\",\"sourcesContent\":[\"ul.tabs {\\n\\tlist-style-type: none;\\n\\tmargin: 0;\\n\\tpadding: 0;\\n\\toverflow-x: auto;\\n\\tdisplay: flex;\\n\\tflex-wrap: nowrap;\\n\\talign-items: baseline;\\n}\\n\\nli.tab {\\n\\theight: 100%;\\n\\tmargin-right: 0.5em;\\n\\tmin-width: 120px;\\n}\\n\\nli.tab:first-child {\\n\\tmargin-left: 0.5em;\\n}\\n\\n.tab button {\\n\\tborder: 1px solid #000000;\\n\\tborder-bottom: 0;\\n\\tborder-radius: 0;\\n\\tbackground-color: transparent;\\n\\tpadding: 0.5em;\\n\\n\\tborder-start-start-radius: 4px;\\n\\tborder-start-end-radius: 4px;\\n}\\n\\n.tab button:hover {\\n\\tbackground-color: #F5F5F5;\\n}\\n\\n.tab .selected {\\n\\tbackground-color: #E3E3E3;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___.toString();\n"],"names":["Component","AppComponent","_class","constructor","__decorate","selector","template","__NG_CLI_RESOURCE__0","InjectionToken","NgModule","FormsModule","BrowserModule","HttpClientModule","RouterModule","ServiceWorkerModule","NG_WEATHER_CONFIG","TabsComponent","environment","routing","CurrentConditionsComponent","ForecastsListComponent","LocationService","MainPageComponent","WeatherService","ZipcodeEntryComponent","APP_CONFIG","AppModule","declarations","imports","register","enabled","production","providers","provide","useValue","bootstrap","appRoutes","path","component","forRoot","Inject","Injectable","of","tap","CacheService","CacheService_1","config","cache","cacheRefreshTime","value","localStorage","getItem","APP_CACHE","JSON","parse","get","url","observable","cacheExpire","Date","getTime","lastUpdate","data","pipe","setItem","stringify","args","providedIn","ChangeDetectorRef","ViewChild","computed","inject","Router","CurrentConditionsComponent_1","cdref","weatherService","router","locationService","currentConditionsByZip","getCurrentConditions","tabsMap","showForecast","zipcode","navigate","ngAfterViewInit","tabs","conditions","console","log","Object","keys","forEach","t","some","c","PREFIX","zip","filter","content","conditionTemplate","title","name","values","detectChanges","ActivatedRoute","route","params","subscribe","getForecast","forecast","BehaviorSubject","LOCATIONS","locations","locationsSub","asObservable","locationsArr","locString","next","addLocation","length","includes","push","removeLocation","index","indexOf","splice","EventEmitter","Input","Output","tabsValue","tabChanged","activeTab","addTabs","found","find","changeTab","tab","setTab","emit","emptyTabs","removeTab","signal","takeUntilDestroyed","HttpClient","WeatherService_1","http","cacheService","currentConditionsMap","currentConditions","zipcodes","mutate","getOwnPropertyNames","current","z","addCurrentConditions","URL","APPID","removeCurrentConditions","getWeatherIcon","id","ICON_URL","service","enableProdMode","platformBrowserDynamic","bootstrapModule"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}